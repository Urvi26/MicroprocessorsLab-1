#include <xc.inc>
psect	code, abs	
main: 	org 0x0
 	goto	setup
	org 0x100

setup: 	movlw	0x30	; delay value
	movwf   0x21	; moving delay value into delay file registers
	movlw	0xff
	movwf	0x22
	movwf	0x23
	
	movlw	0x00
	movwf	TRISH	; setting PORTH as an output
	
	movlw	0x00
	movwf	TRISD	;setting PORTD as an output
	
	movlw	0x00
	movwf	TRISC
	
	movlw	0x00
	movwf	TRISJ
	
	;setf	TRISE
	banksel	PADCFG1	; selecting bank register
	bsf REPU	; setting PORTE pull-ups on
	movlb	0x00	;setting bank register back to 0
	call delay
	
	clrf	LATE	;clear LATE
	call delay
	
start:	movlw	0x0f
	movwf	TRISE	;set E0-E3 as input and E4-E7 as output
	call delay
	
	movf PORTE, W, A
	movwf	PORTH	;move keyboard column data into PORTH 
	call delay
	
	movf	PORTE, W, A
	movwf	0x24, A	;copy column input to FReg 0x24
	
	movlw	0xf0
	movwf	TRISE	;set E4-7 as input, E0-E3 as output
	call delay
	
	movf	PORTE, W, A
	movwf	PORTD	; move keyboard row data into PORTD
	call delayb  
	
	movf	PORTE, W, A	;copy row input to Wreg 
	
	addwf	0x24, 1, 0  ; add row and column bytes and store result in WReg
	movff	0x24, PORTJ	; check if added value is correct by reading onto PORTJ
	
	call checknone
	goto	0x00	;keep re-running code so that keys pressed can be seen almost immediately on PORTs

check:	movlw	0x01
	movwf	PORTC, A
	movlw	11101110B   ;check value into W
    	CPFSLT	0x24
	return
	
	movlw	0x02
	movwf	PORTC, A
	movlw	11101101B
	CPFSLT	0x24
	return
	
	movlw	0x03
	movwf	PORTC, A
	movlw	11101011B   ;check value into W
    	CPFSLT	0x24
	return
 
	movlw	0x0F
	movwf	PORTC, A
	movlw	11100111B
	CPFSLT	0x24
	return
	
	movlw	0x04
	movwf	PORTC, A
	movlw	11011110B   ;check value into W
    	CPFSLT	0x24
	return
 
	movlw	0x05
	movwf	PORTC, A
	movlw	11011101B
	CPFSLT	0x24
	return
	
	movlw	0x06
	movwf	PORTC, A
	movlw	110110110B   ;check value into W
    	CPFSLT	0x24
	return
 
	movlw	0x0E
	movwf	PORTC, A
	movlw	11010111B
	CPFSLT	0x24
	return
	
	movlw	0x07
	movwf	PORTC, A
	movlw	10111110B   ;check value into W
	CPFSLT	0x24
	return
 
	movlw	0x08
	movwf	PORTC, A
	movlw	10111101B
	CPFSLT	0x24
	return
	
	movlw	0x09
	movwf	PORTC, A
	movlw	10111011B   ;check value into W
    	CPFSLT	0x24
	return
	

checknone: movlw 11111111B
	   CPFSEQ   0x24
	   bra check1
	   movlw    0xf0
	   movwf    PORTC, A
	   return
	
check1:	movlw	11101110B	;check value into W
    	CPFSEQ	0x24		;if 0x24 is equal to this value then skip next command
	bra check2		;if 0x24 isn't equal to this value, then check against next value
	movlw	0x01	
	movwf	PORTC, A	;output keypad value onto PORTC
	return			; return to main code

check2:	movlw	11101101B
	CPFSEQ	0x24
	bra check3
	movlw	0x02
	movwf	PORTC, A
	return
	
check3:	movlw	11101011B
	CPFSEQ	0x24
	bra check4
	movlw	0x03
	movwf	PORTC, A
	return

check4:	movlw	11011110B
	CPFSEQ	0x24
	bra check5
	movlw	0x04
	movwf	PORTC, A
	return	
	
check5:	movlw	11011101B
	CPFSEQ	0x24
	bra check6
	movlw	0x05
	movwf	PORTC, A
	return
	
check6:	movlw	11011011B
	CPFSEQ	0x24
	bra check7
	movlw	0x06
	movwf	PORTC, A
	return

check7:	movlw	10111110B
	CPFSEQ	0x24
	bra check8
	movlw	0x07
	movwf	PORTC, A
	return	
	
check8:	movlw	10111101B
	CPFSEQ	0x24
	bra check9
	movlw	0x08
	movwf	PORTC, A
	return
	
check9:	movlw	10111011B
	CPFSEQ	0x24
	bra checkA
	movlw	0x09
	movwf	PORTC, A
	return
	
checkA:	movlw	01111110B
	CPFSEQ	0x24
	bra checkB
	movlw	0x0A
	movwf	PORTC, A
	return

checkB:	movlw	01111011B
	CPFSEQ	0x24
	bra checkC
	movlw	0x0B
	movwf	PORTC, A
	return	
	
checkC:	movlw	01110111B
	CPFSEQ	0x24
	bra checkD
	movlw	0x0C
	movwf	PORTC, A
	return
	
checkD:	movlw	10110111B
	CPFSEQ	0x24
	bra checkE
	movlw	0x0D
	movwf	PORTC, A
	return
	
checkE:	movlw	11010111B
	CPFSEQ	0x24
	bra checkF
	movlw	0x0E
	movwf	PORTC, A
	return

checkF:	movlw	11100111B
	CPFSEQ	0x24
	bra check0
	movlw	0x0F
	movwf	PORTC, A
	return	
	
check0:	movlw	01111101B
	CPFSEQ	0x24
	return
	movlw	0x00
	movwf	PORTC, A
	return
	
	
delay:	;call delayb
	decfsz	0x21
	bra delay
	return
	
delayb:	call delayc
	decfsz	0x22
	bra delayb
	return	
	
delayc: decfsz	0x23
	bra delayc
	return
	
	end main
